<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SignalRNotif.WPFClient"
        xmlns:converters="clr-namespace:SignalRNotif.WPFClient.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        x:Name="window" 
        x:Class="SignalRNotif.WPFClient.NotificationView"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="400"
        AllowsTransparency="True"  WindowStyle="None" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Top"  Deactivated="window_Deactivated" Activated="window_Activated" FlowDirection="RightToLeft"  ShowInTaskbar="False" >
    <Window.Resources>

        <converters:MessageTypeImageConverter    x:Key="messageTypeImageConverter"/>
        <converters:BitmapToBitmapImageConverter x:Key="bitmapToBitmapImageConverter"/>
        <converters:NotConectedBrushConverter    x:Key="notConectedBrushConverter"/>
        <converters:NotConectedTextConverter     x:Key="notConectedTextConverter"/>
        <converters:StateBrushConverter          x:Key="stateBrushConverter"/>


        <Storyboard x:Key="LoadAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.005"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.02">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="-199"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="4">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="window">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="UnLoadAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                <SplineDoubleKeyFrame KeyTime="0" Value="1.02"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.02">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                <SplineDoubleKeyFrame KeyTime="0" Value="4"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-510.02">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="window">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="ListBoxContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnLoaded1" >
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Bd">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="134.436"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BounceEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnLoaded1" Completed="Storyboard_Completed">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Bd">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="492.932">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="Bd"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" RenderTransformOrigin="0.5,0.5" PreviewMouseLeftButtonDown="Bd_PreviewMouseLeftButtonDown">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Grid>
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Button x:Name="button" Template="{StaticResource CloseButtonStyle}" Width="14" Height="14" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,30,0" PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="button">
                                <BeginStoryboard x:Name="OnUnLoaded1_BeginStoryboard" Storyboard="{StaticResource OnUnLoaded1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="button">
                                <BeginStoryboard x:Name="OnUnLoaded1_BeginStoryboard1" Storyboard="{StaticResource OnUnLoaded1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
                            </EventTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <StackPanel IsItemsHost="True">
                <i:Interaction.Behaviors>
                    <ei:FluidMoveBehavior Tag="DataContext">
                        <ei:FluidMoveBehavior.EaseY>
                            <CircleEase EasingMode="EaseIn"/>
                        </ei:FluidMoveBehavior.EaseY>
                        <ei:FluidMoveBehavior.EaseX>
                            <CircleEase EasingMode="EaseIn"/>
                        </ei:FluidMoveBehavior.EaseX>
                    </ei:FluidMoveBehavior>
                </i:Interaction.Behaviors>
            </StackPanel>
        </ItemsPanelTemplate>
        <Storyboard x:Key="ClearAllAnimation" Completed="ClearAllAnimation_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="lstMensajes">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="lstMensajes">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="UnClearAllAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="lstMensajes">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="lstMensajes">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Window.Resources>
    <Window.DataContext>
        <Binding Path="Notification" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource LoadAnimation}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="button">
            <BeginStoryboard x:Name="ClearAllAnimation_BeginStoryboard" Storyboard="{StaticResource ClearAllAnimation}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid x:Name="grid" Background="#F22B2A2A" RenderTransformOrigin="0.5,0.5" FlowDirection="LeftToRight">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="762*"/>
            <RowDefinition Height="19"/>
            <RowDefinition Height="69"/>
        </Grid.RowDefinitions>
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform/>
                <TranslateTransform/>
            </TransformGroup>
        </Grid.RenderTransform>
        <Grid x:Name="grSup" Grid.Row="0" Background="{Binding IsConnected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource notConectedBrushConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>

            <TextBlock  FontFamily="Segoe UI Semilight" Foreground="#FFCBC9C9" Text="{Binding IsConnected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource notConectedTextConverter}}" HorizontalAlignment="Center" FontSize="22"  VerticalAlignment="Center" Grid.Column="1"/>
            <Button Template="{StaticResource CloseButtonStyle}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" Click="Button_Click" Grid.Column="2"/>
            <Border Style="{StaticResource SeparatorStyle}" VerticalAlignment="Bottom" Grid.ColumnSpan="3" Height="2"/>
        </Grid>

        <ListBox x:Name="lstMensajes" Grid.Row="1" ItemsSource="{Binding Notifications, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Background="Transparent" BorderThickness="0" BorderBrush="Transparent" Foreground="Gray" Margin="10" HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.CanContentScroll="False" ItemContainerStyle="{DynamicResource ListBoxContainerStyle}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" RenderTransformOrigin="0.5,0.5" >
            <ListBox.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            </ListBox.Resources>
            <ListBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </ListBox.RenderTransform>
            <ListBox.ItemTemplate>
                <DataTemplate  >
                    <Border Background="{Binding MessageType, Converter={StaticResource stateBrushConverter}}" Margin="0,5,5,5">
                        <Border.BitmapEffect>
                            <DropShadowBitmapEffect/>
                        </Border.BitmapEffect>

                        <Grid Margin="0,5,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="20"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="56"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="44"/>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="5" Height="50"  VerticalAlignment="Top" Margin="3,5,3,0" Background="{Binding UriImage, Converter={StaticResource bitmapToBitmapImageConverter}}"/>
                            <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch" Margin="0,0,0,2" Width="258">
                                <TextBlock Text="{Binding Subject}" ToolTip="{Binding Subject}" FontSize="14"  Foreground="#FFFDFDFD" VerticalAlignment="Center" TextWrapping="Wrap" Margin="5,0,0,0" />
                                <TextBlock Text="{Binding Body}" ToolTip="{Binding Body}" FontSize="11" Foreground="#FF898585" HorizontalAlignment="Stretch" TextWrapping="Wrap" MinHeight="32" MaxHeight="200" Margin="3,4,0,0" />
                            </StackPanel>

                            <Grid Grid.Column="2">

                                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding MessageType, Converter={StaticResource messageTypeImageConverter}}" Height="30" Width="30" Margin="0,18,0,0"/>
                            </Grid>

                            <Grid  Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding User}" HorizontalAlignment="Left" FontSize="11" FontWeight="Bold" Margin="10,0,0,3" Foreground="#FF435F3B"/>
                                <TextBlock Text="{Binding Server}" HorizontalAlignment="Center" FontSize="11" FontWeight="Bold" Margin="5,0,0,3" Foreground="#FF648493"/>
                                <TextBlock Text="{Binding MessageDate, StringFormat=HH:mm}" ToolTip="{Binding MessageDate, StringFormat=dd/MM/yyyy}" HorizontalAlignment="Right" FontSize="11" FontWeight="Bold" Margin="0,0,10,3"/>
                            </Grid>

                            <!--<Image Source="Images/download.jpg" />-->
                            <!--<Border Style="{StaticResource SeparatorStyle}" Grid.ColumnSpan="3"  Margin="0,0,0,3"/>-->

                        </Grid>


                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBlock Grid.Row="2" Visibility="Hidden"  HorizontalAlignment="Center" VerticalAlignment="Center" Text="http://localhost:11111" Style="{StaticResource Desc1Style}" Foreground="Gainsboro" Height="16" Margin="164,2,164,1" Width="72"/>
        <Grid Grid.Row="3" >
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource MainWindowPrincipalBackground}"/>
            </Grid.Background>
            <StackPanel Orientation="Horizontal"  HorizontalAlignment="Stretch" Margin="20,0,10,0" >
                <Button Template="{StaticResource SettingsButtonStyle}" Command="{Binding OpenSettingsViewCommand}" Width="45" Height="45" />
                <Button x:Name="button" Template="{StaticResource ClearallButtonStyle}" Width="45" Height="45" Margin="20,0,0,0" />
            </StackPanel>
        </Grid>

    </Grid>
</Window>
